package ocrm.labex.feevale.br.ocr_mobile.view.fragments;import android.app.Activity;import android.content.Intent;import android.graphics.Point;import android.hardware.Camera;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.WindowManager;import android.widget.Button;import android.widget.FrameLayout;import android.widget.Toast;import java.io.File;import ocrm.labex.feevale.br.ocr_mobile.R;import ocrm.labex.feevale.br.ocr_mobile.utils.AppVariables;import ocrm.labex.feevale.br.ocr_mobile.utils.FileUtils;import ocrm.labex.feevale.br.ocr_mobile.utils.MessageResponse;import ocrm.labex.feevale.br.ocr_mobile.view.adapters.CameraPreview;import ocrm.labex.feevale.br.ocr_mobile.view.CropActivity;/** * Created by 0126128 on 24/10/2014. */public class CameraFragment extends Fragment {    private Camera camera;    private CameraPreview cameraPreview;    private static Activity activity;    public CameraFragment() {        super();    }    public static CameraFragment newInstance(int sectionNumber, Activity activityParam){        CameraFragment cameraFragment = new CameraFragment();        Bundle bundle = new Bundle();        bundle.putInt("ARG_SECTION_NUMBER",sectionNumber);        cameraFragment.setArguments(bundle);        activity = activityParam;        return cameraFragment;    }    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.camera_container, container,false);        getActivity().getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);        cameraPreview = new CameraPreview(getActivity(), camera);        FrameLayout preview = (FrameLayout)view.findViewById(R.id.camera_preview);        preview.addView(cameraPreview);        Button button = (Button)view.findViewById(R.id.button_capture);        button.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                camera.takePicture(null, null, takedPicture);            }        });        return view;    }    private void releaseCamera() {        if (camera != null) {            camera.release();            camera = null;        }    }    @Override    public void onPause() {        super.onPause();        releaseCamera();    }    @Override    public void onResume() {        super.onResume();        camera = getCameraInstance(getActivity());        cameraPreview.refreshCamera(camera);    }    public static Camera getCameraInstance(Activity activity){        Camera c = null;        try {            c = Camera.open();            if(getPosition(activity))                c.setDisplayOrientation(0);            else                c.setDisplayOrientation(90);        }catch (Exception e){            e.printStackTrace();        }        return  c;    }    private static boolean getPosition(Activity activity){        Point size = new Point();        activity.getWindowManager().getDefaultDisplay().getSize(size);        int width = size.x;        int height = size.y;        if(height < width)            return true;        else            return false;    }    /**     * TODO: Adicionar corpo do método que cria o arquivo temporário e corpo do método para salvar a imagem e chamar a próxima activity     */    private Camera.PictureCallback takedPicture = new Camera.PictureCallback() {        @Override        public void onPictureTaken(byte[] bytes, Camera camera) {            File pictureFileTemp = getTempFile();            if(pictureFileTemp != null){// Mudar de == para !=, deixei assim somente pq o método getTempFile está incompleto                MessageResponse response = new FileUtils(activity).saveTemporaryImage(bytes);                if(response.getStatus())                    changeFase();                else                    Toast.makeText(getActivity(), "Problemas ao salvar imagem!", Toast.LENGTH_SHORT).show();                    return;            }else{                Toast.makeText(getActivity(), "Problemas ao obter imagem!", Toast.LENGTH_SHORT).show();                return;            }        }        private File getTempFile() {            return new FileUtils(activity).getFileExternalStorage(AppVariables.TEMP_IMAGE);        }        private void changeFase(){            Intent intent = new Intent(getActivity(),CropActivity.class);            startActivity(intent);        }    };}